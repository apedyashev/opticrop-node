// Generated by CoffeeScript 1.7.1
var Opticrop, async, filesDir, inputFiles, opticrop, util;

Opticrop = require('./lib/opticrop.js').Opticrop;
async = require('async');

util = require('util');

inputFiles = ['example.jpg', 'example_flower.jpg', 'example_flower_left.jpg', 'example.png', 'example.gif'];

filesDir = "./images/";

opticrop = new Opticrop;

async.each(inputFiles, function(file, cb) {
  var inFile, outFile;
  console.time(file);
  inFile = "" + filesDir + file;
  outFile = "" + filesDir + "cropped_" + file;
  return opticrop.setImage(inFile).setWidth(100).setHeight(100).cropTo(outFile, function(err) {
    if (err) {
      console.log("Error", err);
    }
    console.timeEnd(file);
    return cb(err);
  });
}, function(err) {
  if (err) {
    return console.log("Error: " + err);
  } else {
    return console.log("\n All files were cropped without erros. Check the ./image directory \n");
  }
});

const testMemoryLeaks = process.env.TEST_MEMORY || 0;
if (testMemoryLeaks) {
  var memwatch = require('memwatch-next');
  memwatch.on('leak', (info) => {
    console.error('Memory leak detected:\n', info);
  });

  var mkdirp = require('mkdirp');
  // memory leaks test
  async.timesSeries(100, function(n, cb) {
    var inFile, outFile;
    var outDir = filesDir + '/leaks_test/';
    mkdirp.sync(outDir);
    outFile = outDir + n + "_cr_example.jpg";
    inFile = filesDir + "example.jpg";
    console.time(outFile);
    return opticrop.setImage(inFile).setWidth(100).setHeight(100).cropTo(outFile, function(err) {
      console.log("*** #" + n, err);
      console.log(util.inspect(Math.floor(process.memoryUsage().rss / (1024 * 1024)) + " MB"));
      console.timeEnd(outFile);
      return cb();
    });
  }, function(err, data) {
    console.log("done. Err: ", err);
    return console.log(util.inspect(process.memoryUsage()));
  });
}
